---
version: "3.6"
services:

  users:
    build: users
    labels:
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    depends_on:
      db:
        condition: service_healthy
    environment:
      LOG_TO: ${LOG_TO}

  blockchain:
    build: blockchain
    labels:
      co.elastic.logs/json.keys_under_root: true
      co.elastic.logs/json.overwrite_keys: true
      co.elastic.logs/json.add_error_key: true
      co.elastic.logs/json.expand_keys: true
    depends_on: [ db ]
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:80/api/blockchain/health" ]

  db:
    image: mysql:5.6
    environment:
      MYSQL_DATABASE: "db"
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "password"
    labels:
      co.elastic.logs/enabled: false
    ports:
      - "3306:3306"
    volumes:
      - "./var/mysql:/var/lib/mysql"
      - "./ops/database:/docker-entrypoint-initdb.d"
    healthcheck:
      test: '/usr/bin/mysql --user=root --password=password --execute "SHOW DATABASES;"'
      interval: 2s
      timeout: 20s
      retries: 3

  webproxy:
    image: nginxproxy/nginx-proxy
    links: [ users,blockchain ]
    depends_on:
      users:
        condition: service_started
      blockchain:
        condition: service_healthy
    ports:
      - "8080:80"
    volumes:
      - ./webproxy/nginx.conf:/etc/nginx/nginx.conf
      - /var/run/docker.sock:/tmp/docker.sock:ro

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
    container_name: elasticsearch
    ports: [ "9200:9200" ]
    labels:
      co.elastic.logs/enabled: false
    environment:
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "TAKE_FILE_OWNERSHIP=1"
    volumes:
      - "./var/es_data:/usr/share/elasticsearch/data"
    healthcheck:
      test:
        [
            "CMD-SHELL",
            "curl --silent --fail localhost:9200/_cluster/health || exit 1",
        ]

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG}
    container_name: kibana
    ports: [ "5601:5601" ]
    labels:
      co.elastic.logs/enabled: false
    environment:
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
    depends_on: [ "elasticsearch" ]
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:5601/" ]

  filebeat:
    image: docker.elastic.co/beats/filebeat:${TAG}
    container_name: filebeat
    command: --strict.perms=false -e
    user: root
    restart: on-failure
    labels:
      co.elastic.logs/enabled: false
    environment:
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
    volumes:
      - "./ops/config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro"
      - "./var/filebeat/data:/usr/share/filebeat/data"
      - "./var/log/mysql:/var/log/mysql"
      - "/var/lib/docker/containers/:/var/lib/docker/containers/:ro"
      - "/proc:/hostfs/proc:ro"
      - "/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro"
      - "/:/hostfs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on: [ "elasticsearch", "kibana" ]
